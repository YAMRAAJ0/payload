/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    footer1: Footer1;
    navbar: Navbar;
    home: Home;
    cards: Card;
    'grid-cards': GridCard;
    list: List;
    customer: Customer;
    team: Team;
    blogs: Blog;
    course: Course;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    footer1: Footer1Select<false> | Footer1Select<true>;
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    cards: CardsSelect<false> | CardsSelect<true>;
    'grid-cards': GridCardsSelect<false> | GridCardsSelect<true>;
    list: ListSelect<false> | ListSelect<true>;
    customer: CustomerSelect<false> | CustomerSelect<true>;
    team: TeamSelect<false> | TeamSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    course: CourseSelect<false> | CourseSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer1".
 */
export interface Footer1 {
  id: string;
  title: string;
  brand: {
    name: string;
    logo?: (string | null) | Media;
    address?: string | null;
    email?: string | null;
    phone?:
      | {
          number?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  socials?:
    | {
        platform: string;
        url: string;
        icon?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  sections?:
    | {
        title: string;
        links?:
          | {
              label: string;
              href: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  copyright: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: string;
  label: string;
  url?: string | null;
  order: number;
  dropdown?:
    | {
        category: 'domain_based' | 'role_based';
        icon?: (string | null) | Media;
        label: string;
        details?: string | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: string;
  heroTitle: string;
  heroImage?: (string | null) | Media;
  heroetext: string;
  features?:
    | {
        title?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cards".
 */
export interface Card {
  id: string;
  title?: string | null;
  logos?:
    | {
        title: string;
        description: string;
        points?:
          | {
              item?: string | null;
              id?: string | null;
            }[]
          | null;
        likeText?: string | null;
        img?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grid-cards".
 */
export interface GridCard {
  id: string;
  title: string;
  text: string;
  cards: {
    cardTitle: string;
    cardDescription: string;
    listItems?:
      | {
          liTitle: string;
          liText: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "list".
 */
export interface List {
  id: string;
  title: string;
  text: string;
  cards: {
    cardTitle: string;
    cardDescription: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer".
 */
export interface Customer {
  id: string;
  title?: string | null;
  logos?:
    | {
        logo?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team".
 */
export interface Team {
  id: string;
  title?: string | null;
  description?: string | null;
  member?:
    | {
        name: string;
        post?: string | null;
        img?: (string | null) | Media;
        Link?:
          | {
              Link?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string;
  title?: string | null;
  slug?: string | null;
  author?: string | null;
  publishedDate?: string | null;
  thumbnail?: (string | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  isFeatured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course".
 */
export interface Course {
  id: string;
  courseName?: string | null;
  title?: string | null;
  text?: string | null;
  img?: (string | null) | Media;
  likeText?: string | null;
  Learn?:
    | {
        Learn?: string | null;
        id?: string | null;
      }[]
    | null;
  CourseContent?:
    | {
        ContentTitle?: string | null;
        Content?:
          | {
              Content?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'footer1';
        value: string | Footer1;
      } | null)
    | ({
        relationTo: 'navbar';
        value: string | Navbar;
      } | null)
    | ({
        relationTo: 'home';
        value: string | Home;
      } | null)
    | ({
        relationTo: 'cards';
        value: string | Card;
      } | null)
    | ({
        relationTo: 'grid-cards';
        value: string | GridCard;
      } | null)
    | ({
        relationTo: 'list';
        value: string | List;
      } | null)
    | ({
        relationTo: 'customer';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'team';
        value: string | Team;
      } | null)
    | ({
        relationTo: 'blogs';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'course';
        value: string | Course;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer1_select".
 */
export interface Footer1Select<T extends boolean = true> {
  title?: T;
  brand?:
    | T
    | {
        name?: T;
        logo?: T;
        address?: T;
        email?: T;
        phone?:
          | T
          | {
              number?: T;
              id?: T;
            };
      };
  socials?:
    | T
    | {
        platform?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  sections?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              href?: T;
              id?: T;
            };
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  label?: T;
  url?: T;
  order?: T;
  dropdown?:
    | T
    | {
        category?: T;
        icon?: T;
        label?: T;
        details?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  heroTitle?: T;
  heroImage?: T;
  heroetext?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cards_select".
 */
export interface CardsSelect<T extends boolean = true> {
  title?: T;
  logos?:
    | T
    | {
        title?: T;
        description?: T;
        points?:
          | T
          | {
              item?: T;
              id?: T;
            };
        likeText?: T;
        img?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grid-cards_select".
 */
export interface GridCardsSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  cards?:
    | T
    | {
        cardTitle?: T;
        cardDescription?: T;
        listItems?:
          | T
          | {
              liTitle?: T;
              liText?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "list_select".
 */
export interface ListSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  cards?:
    | T
    | {
        cardTitle?: T;
        cardDescription?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer_select".
 */
export interface CustomerSelect<T extends boolean = true> {
  title?: T;
  logos?:
    | T
    | {
        logo?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team_select".
 */
export interface TeamSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  member?:
    | T
    | {
        name?: T;
        post?: T;
        img?: T;
        Link?:
          | T
          | {
              Link?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  author?: T;
  publishedDate?: T;
  thumbnail?: T;
  content?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  isFeatured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course_select".
 */
export interface CourseSelect<T extends boolean = true> {
  courseName?: T;
  title?: T;
  text?: T;
  img?: T;
  likeText?: T;
  Learn?:
    | T
    | {
        Learn?: T;
        id?: T;
      };
  CourseContent?:
    | T
    | {
        ContentTitle?: T;
        Content?:
          | T
          | {
              Content?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}